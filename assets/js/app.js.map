{"version":3,"sources":["app.module.js","components/contacts/contactsCtrl.js","components/home/homeCtrl.js","components/login/loginCtrl.js","components/sales/salesCtrl.js","shared/nav/navCtrl.js","shared/owlCarousel/initOwlCarouselDirective.js","shared/owlCarousel/owlCarouselService.js","shared/product-thumbnail/productThumbnailDirective.js","components/home/carousel/carouselCtrl.js","shared/directives/clover/cloverDirective.js","shared/nav/fixnav/fixNavDirective.js","shared/services/simple-form/simpleFormService.js"],"names":[],"mappingspEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var app = angular.module('luckystore', ['ngRoute', 'ui.bootstrap', 'ngAnimate', 'uiGmapgoogle-maps']);\r\n\r\napp.config(['$routeProvider',\r\n    function($routeProvider) {\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: 'app/components/home/homeView.html',\r\n                controller: 'homeCtrl'\r\n            })\r\n            .when('/sales/category/:category/tag/:tag', {\r\n                templateUrl: 'app/components/sales/salesView.html',\r\n                controller: 'salesCtrl'\r\n            })\r\n            .when('/contacts', {\r\n                templateUrl: 'app/components/contacts/contactsView.html',\r\n                controller: 'contactsCtrl'\r\n            })\r\n            .when('/login', {\r\n                templateUrl: 'app/components/login/loginView.html',\r\n                controller: 'loginCtrl'\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/'\r\n            });\r\n}]);\r\n\r\n","app.controller('contactsCtrl', ['$scope', function($scope) {\r\n    $scope.map = {center: {latitude: 51.219053, longitude: 4.404418 }, zoom: 14 };\r\n    $scope.options = {\r\n        scrollwheel: false\r\n    };\r\n}]);","// Home view controller\r\napp.controller('homeCtrl', ['$scope', '$http', '$routeParams', '$modal', 'simpleFormService',\r\n    function($scope, $http, $routeParams, $modal, simpleFormService) {\r\n        simpleFormService.init();\r\n\r\n        // Products data\r\n        $http.get('app/data/products/products.json').success(function(data) {\r\n            $scope.products = data;\r\n        });\r\n\r\n        // Emulate newsletter response from server\r\n        $scope.newsletter = function() {\r\n            $http.get('app/data/newsletter/newsletter.json').success(function(data) {\r\n                $scope.res = data;\r\n                $('.js-response-modal').modal('show');\r\n            });\r\n        };\r\n\r\n        // Options for initOwlCarousel directive\r\n        $scope.owlCarouselOpt = {\r\n            loop: false,\r\n            slideBy: 'page',\r\n            dots: false,\r\n            responsive: {\r\n                0: {\r\n                    items: 1\r\n                },\r\n                500: {\r\n                    items: 2\r\n                },\r\n                768: {\r\n                    items: 3\r\n                },\r\n                992: {\r\n                    items: 4\r\n                }\r\n            }\r\n        };\r\n\r\n        // Modal newsletter sign-up\r\n        $scope.signUp = function() {\r\n            $http.get('app/data/newsletter/newsletter.json')\r\n                .success(function(data) {\r\n                    $scope.response = data;\r\n\r\n                    var modal = $modal.open({\r\n                        templateUrl: 'app/shared/templates/sampleResponse.html',\r\n                        controller: 'homeSignUpResponseCtrl',\r\n                        resolve: {\r\n                            response: function() {\r\n                                return $scope.response;\r\n                            }\r\n                        }\r\n                    });\r\n            })\r\n        }\r\n}]);\r\n\r\n// Modal controller\r\napp.controller('homeSignUpResponseCtrl', ['$scope', '$modalInstance', 'response', function($scope, $modalInstance, response) {\r\n    $scope.response = response;\r\n\r\n    $scope.ok = function() {\r\n        $modalInstance.close();\r\n    }\r\n}]);\r\n\r\n\r\n","app.controller('loginCtrl', ['$scope', '$http', '$modal', 'simpleFormService',\r\n    function($scope, $http, $modal, simpleFormService) {\r\n        simpleFormService.init();\r\n        // Login action\r\n        $scope.login = function() {\r\n            $http.get('app/data/login/login.json')\r\n                .success(function(data) {\r\n                    $scope.response = data;\r\n\r\n                    var modal = $modal.open({\r\n                        templateUrl: 'app/shared/templates/sampleResponse.html',\r\n                        controller: 'loginResponseCtrl',\r\n                        resolve: {\r\n                            response: function() {\r\n                                return $scope.response;\r\n                            }\r\n                        }\r\n                    });\r\n            })\r\n        }\r\n}]);\r\n\r\n// Modal controller\r\napp.controller('loginResponseCtrl', ['$scope', '$modalInstance', 'response', function($scope, $modalInstance, response) {\r\n    $scope.response = response;\r\n\r\n    $scope.ok = function() {\r\n        $modalInstance.close();\r\n    }\r\n}]);","app.controller('salesCtrl', ['$scope', '$http', '$routeParams',\r\n    function($scope, $http, $routeParams) {\r\n        $http.get('app/data/products/products.json').success(function(data) {\r\n            $scope.products = data;\r\n            $scope.itemLength = data.length;\r\n        });\r\n\r\n        $scope.category = $routeParams.category;\r\n        $scope.tag = $routeParams.tag;\r\n\r\n        $scope.isMatchParams = function(product) {\r\n            if ($scope.category != 'all') {\r\n                if ($scope.category.indexOf('-') == -1) {\r\n                    var ctg = product.category.replace(/-\\S+/, '');\r\n                    if (ctg != $scope.category) {\r\n                        return false;\r\n                    }\r\n                } else if (product.category != $scope.category) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if ($scope.tag != 'all') {\r\n                if (product.tag != $scope.tag) return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n}]);\r\n","app.controller('navbarCtrl', ['$scope', function($scope) {\r\n    $scope.isCollapsed = true;\r\n\r\n    $scope.toggleNav = function() {\r\n        $scope.isCollapsed = !$scope.isCollapsed;\r\n    }\r\n}]);\r\n","// Initialize owl carousel with owlCarousel service and options in parent scope\r\napp.directive('initOwlCarousel', ['owlCarousel', function(owlCarousel) {\r\n    return function(scope, element, attr) {\r\n        if (scope.$last) {\r\n            owlCarousel.init(scope.owlCarouselOpt);\r\n        }\r\n    }\r\n}]);\r\n\r\n","// Default owl carousel selector\r\napp.constant('owlCarouselConfig', {\r\n    carouselSelector: '.js-owl-carousel'\r\n});\r\n\r\n// Owl Carousel service\r\napp.service('owlCarousel', ['owlCarouselConfig', function(owlCarouselConfig) {\r\n    this.init = function(options, selector) {\r\n        var selector = selector || owlCarouselConfig.carouselSelector;\r\n        var owl = $(selector);\r\n\r\n        owl.owlCarousel(options);\r\n\r\n        $(selector + '-prev').on('click', function() {\r\n            owl.trigger('prev.owl.carousel');\r\n        });\r\n\r\n        $(selector + '-next').on('click', function() {\r\n            owl.trigger('next.owl.carousel');\r\n        });\r\n    }\r\n}]);\r\n","app.directive('productThumbnail', function() {\r\n    return {\r\n        restrict: 'EA',\r\n        templateUrl: 'app/shared/product-thumbnail/productThumbnailTemplate.html',\r\n        replace: true\r\n    }\r\n});","app.controller('carouselCtrl', ['$scope', '$http', function($scope, $http) {\r\n    $http.get('app/data/home-carousel-slides/slides.json').success(function(data) {\r\n        $scope.slides = data;\r\n    });\r\n}]);","app.directive('clover', function() {\r\n    return {\r\n        restrict: 'EA',\r\n        replace: true,\r\n        templateUrl: 'app/shared/directives/clover/cloverTemplate.html'\r\n    }\r\n})","// Fix navigation default selectors & classname\r\napp.constant('fixNavConfig', {\r\n    navContainerSelector: '.main-nav-container',\r\n    navPlaceholderSelector: '.main-nav-placeholder',\r\n    fixNavClass: 'fix-nav'\r\n});\r\n\r\n// Fix navigation directive controller\r\napp.controller('fixNavCtrl', ['$scope', 'fixNavConfig',\r\n    function($scope, fixNavConfig) {\r\n        var self = this;\r\n\r\n        $scope.isFixNav = null;\r\n\r\n        this.init = function() {\r\n            self.nav = $(fixNavConfig.navContainerSelector);\r\n            self.placeholder = $(fixNavConfig.navPlaceholderSelector);\r\n\r\n            $(window).on('scroll', function() {\r\n                $scope.isFixNav = $(window).scrollTop() > getNavBottom();\r\n                $scope.$apply();\r\n            });\r\n        };\r\n\r\n        function getNavBottom() {\r\n            var container = ($scope.isFixNav) ? self.placeholder : self.nav;\r\n            var bottom = container.height() + container.offset().top;\r\n            return bottom;\r\n        };\r\n\r\n        $scope.$watch('isFixNav', function(isFixNav) {\r\n            if ($scope.isFixNav) {\r\n                enableFix();\r\n            } else {\r\n                disableFix();\r\n            }\r\n        });\r\n\r\n        function enableFix() {\r\n            self.placeholder.height(self.nav.height());\r\n            self.placeholder.css({\r\n                marginTop: self.nav.css('margin-top'),\r\n                marginBottom: self.nav.css('margin-bottom')\r\n            })\r\n            self.placeholder.show();\r\n            self.nav.addClass(fixNavConfig.fixNavClass);\r\n            closeDropdowns();\r\n        }\r\n\r\n        function disableFix() {\r\n            if ($scope.isFixNav === null) return;\r\n            self.placeholder.hide();\r\n            self.nav.removeClass(fixNavConfig.fixNavClass);\r\n            closeDropdowns();\r\n        }\r\n\r\n        function closeDropdowns() {\r\n            for (var cs = $scope.$$childHead; cs; cs = cs.$$nextSibling) {\r\n                if (cs.isOpen !== undefined) {\r\n                    cs.isOpen = false;\r\n                }\r\n            }\r\n        }\r\n}]);\r\n\r\n// Fix navigation directive\r\napp.directive('fixNav', function() {\r\n    return {\r\n        restrict: 'A',\r\n        controller: 'fixNavCtrl',\r\n        link: function(scope, element, attr, fixNavCtrl) {\r\n            fixNavCtrl.init();\r\n        }\r\n    }\r\n});","app.service('simpleFormService', function() {\r\n    this.init = function() {\r\n        var block = $('.simple-form-block');\r\n        block.find('input, button')\r\n            .on('blur', function(e) {\r\n                var relatedTarget = $(e.relatedTarget);\r\n                if (relatedTarget.parents('.simple-form-block').length) {\r\n                    return;\r\n                }\r\n                block.removeClass('hasFocus');\r\n            })\r\n            .on('focus', function(e) {\r\n                block.addClass('hasFocus');\r\n            })\r\n    }\r\n});"],"sourceRoot":"/source/"}